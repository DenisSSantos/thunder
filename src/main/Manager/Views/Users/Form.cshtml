@model User
<script type="text/javascript">
    $(function () {
        $.manager.users.form();
    });
</script>
@using (Html.BeginForm("Save", "Users", FormMethod.Post))
{
    @Html.Hidden("Id", Model.Id)    
    using (Html.ContentBox(Model.Id == 0 ? "Novo usuário" : "Alterar usuário", new ContentBoxHeaderLoading { Id = "loading", ImagePath = Href(HardCode.Constants.ImageLoadingForm) }))
    {
    @Helpers.NotificationRequired()
    <p class="column">
        @Html.Label("Profile", "Perfil", true)
        @Html.DropDownList("Profile.Id", (IList<SelectListItem>)ViewBag.Profiles, new { id = "Profile" })
    </p>
    <div class="clear"></div>
    <p class="column">
        @Html.Label("name", "Nome", true)
        @Html.TextBoxFor(x => x.Name, new { id = "name", maxlength = 100, @class = "medium-input-fixed" })
    </p>
    <p class="column">
        @Html.Label("email", "E-mail")
        @Html.TextBoxFor(x => x.Email, new { id = "email", maxlength = 100, @class = "medium-input-fixed" })
    </p>
    <p class="column">
        @Html.Label("login", "Login", true)
        @Html.TextBoxFor(x => x.Login, new { id = "login", maxlength = 20, @class = "small-input-fixed" })
    </p>
    <p class="column">
        @Html.Label("password", "Senha", true)
        @Html.TextBox("Password",(string.IsNullOrEmpty(Model.Password) ? "" : Manager.Models.User.DecryptPassword(Model.Password)), new { id = "password", maxlength = 8, @class = "small-input-fixed" })
    </p>
    <p class="column">
        @Html.Label("Status", "Status", true)
        @Html.DropDownList("State.Id", (IList<SelectListItem>)ViewBag.States, new { id = "Status" })
    </p>    
    <div class="clear">
    </div>
    @Helpers.ActionForSave(Url.Action("Index"))
    }
}
